# Read about services at
# http://kubernetes.io/docs/user-guide/services/
kind: 'Service'
apiVersion: 'v1'
metadata:
  # http://kubernetes.io/docs/user-guide/identifiers/
  name: 'fluentd'
  # http://kubernetes.io/docs/user-guide/labels/
  labels:
    # Everything we make and put into k8s will have this label.
    provider: 'LeastAuthority'
    component: 'Monitoring'
spec:
  selector:
    # Pick up all the other resources that claim to be part of the monitoring
    # system.
    provider: 'LeastAuthority'
    component: 'Monitoring'

  type: 'NodePort'

  ports:
  # expose fluentd "forward" input source port
  - name: 'forward-server'
    port: 24224
    targetPort: 24224
    protocol: 'TCP'
  # and expose the fluentd prometheus output plugin
  - name: 'prometheus'
    port: 24231
    targetPort: 24231
    protocol: 'TCP'
---
kind: 'ConfigMap'
apiVersion: 'v1'
metadata:
  name: 'fluent-configuration'
data:
  fluentd: |
    # Accept logs from the fluent-bit and other collection services running
    # throughout the cluster.
    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>

    # This turns on the metrics HTTP server for Prometheus to scrape.
    <source>
      @type prometheus
      port 24231
      bind 0.0.0.0
      metrics_path /metrics
    </source>

    # Duplicate the source event so we can both record everything and apply
    # metrics processing.
    <match>
      @type copy
      <store>
        @type relabel
        @label @LOGGING
      </store>
      <store>
        @type relabel
        @label @METRICS_DEPLOYMENTS
      </store>
    </match>

    <label @LOGGING>
      # Send everything on to S3 for short-term storage.
      <match **>
        # Currently expected labels:
        #
        #   signup
        #   signup-http
        #   grid-router
        #   subscription-manager
        #   subscription-converger
        #
        # But since these are defined elsewhere expect this list to be
        # incomplete.
        #
        @type s3

        # Get the key id and secret key from somewhere else, somewhere more
        # secret-y.
        @include /fluentd/secrets/s3.conf

        # Write the logs to this bucket.
        s3_bucket com.leastauthority.fluentd
        s3_region us-east-1

        # Write them into / in the bucket
        path /

        # Use a local file to buffer events before writing them to S3.
        buffer_type file
        # This is the path to the buffer file.
        buffer_path /tmp/fluent/s3

        # Even though the buffer is a file, flush it to S3 at shutdown.  The
        # container has no persistent storage.
        flush_at_shutdown true

        # This controls how often the buffer is flushed to S3.  Whenever this
        # data format string would change, the buffer is flushed and a new one
        # started.
        time_slice_format %Y%m%d%H

        # But wait a little while after the change over to collect straggler
        # events that belong in the old timeslice but just haven't arrived yet.
        time_slice_wait 10m

        # Use UTC as the timezone for logged timestamps.
        utc

        # Write JSON to the log.  Include some identifying metadata in each
        # event.
        format json
        include_time_key
        time_key fluent_time
        include_tag_key
        tag_key fluent_tag
      </match>
    </label>
    </label>

    <label @METRICS_DEPLOYMENTS>
      <filter subscription-converger>
        @type where
        where action_type = 'load-deployments' and action_status = 'succeeded'
      </filter>
      <filter subscription-converger>
        @type prometheus
        <metric>
          name s4_deployment_gauge
          type gauge
          desc Current S4 Subscription Deployments
          key deployment_count
        </metric>
      </filter>
    </label>

---
# Read about deployments at
# http://kubernetes.io/docs/user-guide/deployments/
kind: 'Deployment'
apiVersion: 'extensions/v1beta1'
metadata:
  name: 'fluentd'
spec:
  # Keep some old ReplicaSets for older versions of the Deployment around -
  # but not all of them (as is the default).
  revisionHistoryLimit: 3

  replicas: 1
  strategy:
    type: 'RollingUpdate'

  # This is a pod spec template.  The deployment uses it to create new pods
  # sometimes (for example, when starting up for the first time, upgrading, or
  # doing horizontal scale-out).
  template:
    metadata:
      labels:
        provider: 'LeastAuthority'
        component: 'Monitoring'
        version: '1'
    spec:
      volumes:
      - name: 'fluent-configuration'
        configMap:
          name: 'fluent-configuration'
          items:
            - key: 'fluentd'
              path: 'fluentd.conf'
      - name: 'fluent-secrets'
        secret:
          secretName: 's4'
          defaultMode: 0444
          items:
          - key: 'fluent-s3.conf'
            path: 's3.conf'
      - name: 'fluent-buffer-space'
        emptyDir:

      # Read about containers at
      # http://kubernetes.io/docs/user-guide/production-pods/
      containers:
      - name: 'fluentd'
        imagePullPolicy: 'Always'
        image: 'leastauthority/fluentd:latest'
        env:
        - name: 'FLUENTD_CONF'
          value: 'fluentd.conf'
        - name: 'FLUENTD_OPT'
          value: '--no-supervisor -v'
        volumeMounts:
          - mountPath: '/fluentd/etc'
            name: 'fluent-configuration'
          - mountPath: '/fluentd/secrets'
            name: 'fluent-secrets'
          - mountPath: '/tmp/fluent'
            name: 'fluent-buffer-space'
        resources:
          limits:
            cpu: '100m'
            memory: '200Mi'
