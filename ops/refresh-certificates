#!/usr/bin/env bash

set -ex
set -o pipefail

if [ -z "${LETSENCRYPT}" ]; then
    echo "Tell me where Let's Encrypt data is stored w/ LETSENCRYPT env var."
    exit 1
fi

function lets_encrypt() {
    profile=$1
    domain=$2

    AWS_PROFILE="${profile}" \
	       certbot \
	       certonly \
	       --config-dir "${LETSENCRYPT}"/etc \
	       --logs-dir "${LETSENCRYPT}"/logs \
	       --work-dir "${LETSENCRYPT}"/work \
	       --dns-route53 \
	       -d "${domain}"
}

function refresh_website() {
    cert_dir=$1
    config_path=$2

    KEY="$(cat ${LETSENCRYPT}/etc/live/${cert_dir}/privkey.pem | base64 --wrap=0)"
    CERT="$(cat ${LETSENCRYPT}/etc/live/${cert_dir}/cert.pem | base64 --wrap=0)"
    CHAIN="$(cat ${LETSENCRYPT}/etc/live/${cert_dir}/chain.pem | base64 --wrap=0)"
    sops --set '["data"]["website-key.pem"] "'"${KEY}"'"' k8s/"${config_path}"
    sops --set '["data"]["website-cert.pem"] "'"${CERT}"'"' k8s/"${config_path}"
    sops --set '["data"]["website-chain.pem"] "'"${CHAIN}"'"' k8s/"${config_path}"
}

function refresh_graphs() {
    cert_dir=$1
    config_path=$2

    KEY="$(cat ${LETSENCRYPT}/etc/live/${cert_dir}/privkey.pem | base64 --wrap=0)"
    FULLCHAIN="$(cat ${LETSENCRYPT}/etc/live/${cert_dir}/fullchain.pem | base64 --wrap=0)"
    sops --set '["data"]["graphs-privkey.pem"] "'"${KEY}"'"' k8s/"${config_path}"
    sops --set '["data"]["graphs-fullchain.pem"] "'"${FULLCHAIN}"'"' k8s/"${config_path}"
}

lets_encrypt "leastauthority-staging" "s4.staging.leastauthority.com"
lets_encrypt "leastauthority-staging" "graphs.staging.leastauthority.com"
refresh_website "s4.staging.leastauthority.com" "secrets.staging.enc.yaml"
refresh_graphs "graphs.staging.leastauthority.com" "secrets.staging.enc.yaml"

lets_encrypt "leastauthority-infrastructure" "s4.leastauthority.com"
lets_encrypt "leastauthority-infrastructure" "graphs.leastauthority.com"
refresh_website "s4.leastauthority.com" "secrets.production.enc.yaml"
refresh_graphs "graphs.leastauthority.com" "secrets.production.enc.yaml"
